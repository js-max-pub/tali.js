function t(t=""){return t?.split("\r\n")?.flatMap((t=>t.split("\r")))?.flatMap((t=>t.split("\n")))??[]}const e="|T|";const n="|L|";function l(t="",e){let n=r(t,e);let l=i(n,e);return l}function r(l,r={}){let i=t(l).filter((t=>t.trim())).map((t=>t.split("\t").map((t=>String(t).replaceAll("\t",e).replaceAll("\n",n).trim())).map((t=>t==r.none?undefined:t))));return i}function i(t){let e=t[0];let n={};for(let l of t.slice(1)){n[l[0]]=Object.fromEntries(l.map(((t,n)=>[e[n],t])).slice(1))}return n}function o(t={},e){let n=s(t,e);let l=f(n,e);return l}function s(t,e={}){let n=[];let l=[...new Set(Object.keys(t).flatMap((e=>Object.keys(t[e]))))];if(e.sortCols)l=l.sort();for(let e in t){n.push([e,...l.map((n=>t[e][n]??""))])}let r=-1;if(e.sortRows)r=0;if(e.sortCol&&l.indexOf(e.sortCol)!=-1)r=l.indexOf(e.sortCol)+1;if(r!=-1){n=n.sort(((t,e)=>t[r]>e[r]?1:t[r]<e[r]?-1:0))}n.unshift(["",...l]);return n}function f(t,l={}){t[0][0]=l.title||"";let r=t.map((t=>t.map((t=>t?t:l.none||"")).map((t=>String(t).replaceAll("\t",e).replaceAll("\n",n).trim())).join("\t"))).join("\n");if(l.none&&r.startsWith(l.none))r=r.slice(l.none.length);return r}const a={grid:{parse:l,stringify:o}};export{a as default};
