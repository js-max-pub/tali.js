function t(t="",e=" "){let n="\\"+e.split("").join("\\");return(t+"").replace(new RegExp(`^[${n}]+|[${n}]+$`,"g"),"")}function e(t=""){return t?.split("\r\n\r\n")?.flatMap((t=>t.split("\r\r")))?.flatMap((t=>t.split("\n\n")))??[]}function n(t=""){return t?.split("\r\n")?.flatMap((t=>t.split("\r")))?.flatMap((t=>t.split("\n")))??[]}function r(t){let e=[];for(let n in t){for(let r in t[n]){e[r]??=[];e[r][n]=t[n][r]}}return e}function l(t,e={}){let n=r(t.map((t=>t.map((t=>String(t??"").length))))).map((t=>Math.max(...t)));if(e.pretty>1)n=n.map((t=>Math.ceil(t/e.pretty)*e.pretty));return t.map((t=>t.map(((t,e)=>i(t,n[e])))))}function i(t,e){if(t*1==t)return String(t??"")?.padStart(e," ")??"";return String(t??"")?.padEnd?.(e," ")??""}function a(t,e={}){return t.map((t=>t.map((t=>t.map((t=>t in e.stringify?e.stringify[t]:t)).map((t=>String(t).replaceAll("\t",e.tab).replaceAll("\n",e.line).trim()))))))}function o(t,e={}){console.log(e);return t.map((t=>t.map((t=>t.map((t=>t in e.parse?e.parse[t]:t))))))}function s(t,r={}){let l=e(t).map((t=>n(t).filter((t=>t.trim())).map((t=>t.split("\t").map((t=>t.trim()))))));return o(l,r)}function f(t,e={}){t=a(t,e);if(e.pretty)t=t.map((t=>l(t)));return t.map((t=>t.map((t=>t.join(e.cell))).join(e.row))).join(e.table)}const u={str2aaa:s,aaa2str:f};function p(e,r={}){return[n(e).map((e=>e.split(r.delimiter??";").map((e=>t(e,r.quotes??'"')))))]}function c(t){let e=t[0];let n=t.slice(1).map((t=>Object.fromEntries(t.map(((t,n)=>[e[n],t])))));return n}function m(t,e={}){let n=p(t,e)[0];let r=c(n);return r}const d={str2aaa:p,aa2ad:c,parse:m};function g(t,e){const n=(new DOMParser).parseFromString(t,"text/html");return h(n,e)}function h(t,e){let n=[];for(let r of t.querySelectorAll("table")){let t=b(r,e);n.push(t)}return n}function y(t,e){if(!t.parentNode)return null;if(e.split(",").includes(t.nodeName.toLowerCase()))return t;return y(t.parentNode,e)}function b(t,e){let n=[];let r=[];let l=[];let i={};let a;for(let o of t.querySelectorAll("tr")){[a,i]=w(o,i,e);if(y(o,"thead"))n.push(a);else if(y(o,"tfoot"))l.push(a);else r.push(a)}return[...n,...r,...l]}function w(t,e={},n){let r=[];let l=-1;for(let i of t.querySelectorAll("th,td")){l++;if(e[l]){r.push("||");e[l]--}const t=N(i,n);r.push(t);const a=i.getAttribute("colspan")*1;for(let t=0;t<a-1;t++)r.push("==");const o=i.getAttribute("rowspan")*1;if(o)e[l]=o-1}return[r,e]}function N(t,e){let n=[...t.childNodes].filter((t=>t.nodeType==3)).map((t=>t.textContent)).join("").trim();if(!n)n=t.innerText;let r=n.replaceAll(/\s/g,"");if(e.region?.toLowerCase()=="de")r=r.replaceAll(".","").replace(",",".");let l=r*1;if(!isNaN(l))return l;return n}const j={str2aaa:g,html2aaa:h};const A=(t,e=1)=>t.unshift(Array(t[0].length).fill(1).map(((t,n)=>"c"+(n*1+e))));const C=(t,e=1)=>t.map(((t,n)=>t.unshift("r"+(n*1+e))));function S(t,e={}){let n={};for(let r in t){let l=t[r][0][0];if(!l||e.addTableNames)l="t"+(r*1+1);n[l]=O(t[r],e)}return n}function O(t,e={}){if(e.addRowNames)C(t);if(e.addColumnNames)A(t,e.addRowNames?0:1);let n=t[0];let r={};for(let e of t.slice(1)){r[e[0]]=Object.fromEntries(e.map(((t,e)=>[n[e],t])).slice(1))}return r}function x(t,e={}){let n=[];for(let r in t){let l=M(t[r],e);l[0][0]=r;n.push(l)}return n}function M(t,e={}){let n=[];let l=[...new Set(Object.values(t).flatMap((t=>Object.keys(t))))];if(e.sortCols)l=l.sort();if(Array.isArray(e.sortCols))l=e.sortCols;for(let e in t){n.push([e,...l.map((n=>t[e][n]))])}let i=-1;if(e.sortRows)i=0;if(e.sortCol&&l.indexOf(e.sortCol)!=-1)i=l.indexOf(e.sortCol)+1;if(i!=-1){n=n.sort(((t,e)=>t[i]>e[i]?1:t[i]<e[i]?-1:0))}n.unshift(["",...l]);if(e.flip)n=r(n);return n}const L={table:"\n\n\n",row:"\n",cell:"\t",tab:":T:",line:":L:",parse:{"":null,null:null,undefined:null,NaN:null,"Invalid Date":null},stringify:{null:"",undefined:"",NaN:"","Invalid Date":""}};const E={tali:u,csv:d,html:j};function q(t,e={}){R(e);let n=e.source?.toLowerCase()??"tali";let r=E[n].str2aaa(t,e);if(e.target?.toLowerCase?.()=="aaa")return r;let l=S(r,e);return l}function v(t,e={}){R(e);let n=x(t,e);let r=e.source?.toLowerCase()??"tali";let l=E[r].aaa2str(n,e);return l}function R(t){t.parse={...L.parse,...t.parse};t.stringify={...L.stringify,...t.stringify};for(let e in L)if(!(e in t))t[e]=L[e];return t}const T={parse:q,stringify:v,mergeSettingsAndOptions:R};function D(t){let e=n(t).map((t=>t.split("\t")));return Object.fromEntries(e.map((t=>[t[0],t[1]])))}function $(t){return Object.entries(t).map((t=>t.join("\t"))).join("\n")}const I={parse:D,stringify:$};const k={grid:T,tree:I,settings:L};export{k as TALI};
